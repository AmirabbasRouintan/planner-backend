version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=planner_db
      - POSTGRES_USER=planner_user
      - POSTGRES_PASSWORD=planner_password
    ports:
      - "5432:5432"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M
    command: >
      postgres -c shared_buffers=24MB 
      -c effective_cache_size=60MB 
      -c maintenance_work_mem=24MB 
      -c checkpoint_completion_target=0.9 
      -c wal_buffers=1MB 
      -c default_statistics_target=100 
      -c random_page_cost=1.1 
      -c effective_io_concurrency=200 
      -c work_mem=2MB 
      -c min_wal_size=100MB 
      -c max_wal_size=200MB
      -c max_connections=20

  backend:
    build: 
      context: ./pinger
      dockerfile: Dockerfile-light
    ports:
      - "8000:8000"
    volumes:
      - ./pinger:/app
    environment:
      - DEBUG=0
      - DB_NAME=planner_db
      - DB_USER=planner_user
      - DB_PASSWORD=planner_password
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 150M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile-light
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network
    environment:
      - VITE_API_URL=http://localhost:8000
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 100M

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge